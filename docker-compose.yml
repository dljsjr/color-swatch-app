version: "3.6"
services:
  proxy:
    image: caddy:2-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
    depends_on:
      - app
  api:
    build: api
    restart: always
    depends_on:
      - postgres
    # ports:
    #   - "8000:8000"
  postgres:
    image: postgres:12
    restart: always
    # ports:
    #   - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ccolors
      POSTGRES_PASSWORD: postgrespassword
  app:
    build: app
    restart: always
    depends_on:
      - api
      - postgres
    # ports:
    #   - "3000:3000"
## This docker-compose is based on the Hasura docker compose.
## graphql-engine commented out for now. Just using it to bring
## up postgres.
#   graphql-engine:
#     image: hasura/graphql-engine:v2.0.1
#     ports:
#     - "8080:8080"
#     depends_on:
#     - "postgres"
#     restart: always
#     environment:
#       HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/ccolors
#       ## enable the console served by server
#       HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
#       ## enable debugging mode. It is recommended to disable this in production
#       HASURA_GRAPHQL_DEV_MODE: "true"
#       HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
#       ## uncomment next line to set an admin secret
#       # HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
volumes:
  db_data:
